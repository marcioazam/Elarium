{
  "format_version": "1.17.10",
  "minecraft:entity": {
    "description": {
      "identifier": "xp:conduit",
      "is_spawnable": true,
      "is_summonable": true,
      "animations": {
        "annoyance": "controller.animation.conduit.annoyance",
        "control_stationed": "controller.animation.conduit.stationed",
        "neighbor_annoyed_timer": "animation.conduit.neighbor_annoyed_timer",
        "tick": "animation.conduit.tick",
        "walk": "animation.conduit.walk",
        "use": "animation.conduit.use",
        "use_test": "animation.conduit.use_test",
        "stationed": "animation.conduit.stationed",
        "annoy": "animation.conduit.annoy",
        "dead": "animation.conduit.dead",
        "during_dead": "animation.conduit.during_dead",
        "full_dead": "animation.conduit.full_dead",
        "annoy_cool": "animation.conduit.annoy_cool",
        "teleport_cooldown": "controller.animation.conduit.teleport_cooldown",
        "teleport": "controller.animation.conduit.teleport",
        "collision": "controller.animation.conduit.collision",
        "broken_sanctuary_fast_despawn": "animation.common.broken_sanctuary_fast_despawn",
        "idle_sfx": "animation.conduit.idle_sfx"
      },
      "scripts": {
        "animate": [
          "annoyance",
          "control_stationed",
          "tick",
          "teleport_cooldown",
          "teleport",
          "collision",
          "broken_sanctuary_fast_despawn",
          { "use_test": "!q.is_baby && q.variant == 1" },
          { "walk": "q.ground_speed >= 0.025 && q.variant == 0" },
          { "use": "q.is_baby && q.variant == 1" },
          { "idle_sfx": "q.variant == 1" },
          { "annoy": "q.is_illager_captain && q.mark_variant < 3" },
          { "dead": "q.mark_variant == 3" },
          { "during_dead": "q.mark_variant == 3" },
          { "full_dead": "q.is_powered" },
          { "annoy_cool": "q.is_stunned" }
        ]
      },
      "properties": {
        "xp:collision": {
          "type": "bool",
          "default": false
        }
      }
    },
    "component_groups": {
      "xp:instant_despawn": {
        "minecraft:instant_despawn": {}
      },
      "xp:sanctuary_conduit": {
        "minecraft:type_family": {
          "family": ["conduit", "mob", "monster", "sanctuary_conduit"]
        }
      },

      "xp:no_move": {
        "minecraft:movement.basic": {
          "max_turn": 0
        },
        "minecraft:movement": {
          "value": 0
        }
      },
      "xp:move": {
        "minecraft:movement.basic": {
          "max_turn": 8
        },
        "minecraft:movement": {
          "value": 0.1
        },
        "minecraft:is_saddled": {}
      },

      "xp:teleport": {
        "minecraft:is_ignited": {}
      },

      "xp:use": {
        "minecraft:is_baby": {}
      },
      "xp:usable": {
        "minecraft:variant": {
          "value": 0
        }
      },
      "xp:stationed": {
        "minecraft:variant": {
          "value": 1
        },
        "minecraft:tick_world": {
          "never_despawn": true,
          "radius": 2
        },
        "minecraft:behavior.knockback_roar": {
          "attack_time": 0.05,
          "cooldown_time": 60,
          "duration": 0.1,
          "knockback_damage": 1,
          "knockback_horizontal_strength": 2,
          "knockback_range": 4,
          "knockback_vertical_strength": 2,
          "knockback_strength": 4
        }
      },
      "xp:cooldown": {
        "minecraft:variant": {
          "value": 2
        }
      },

      "xp:annoy": {
        "minecraft:is_illager_captain": {}
      },
      "xp:slightly_annoyed": {
        "minecraft:mark_variant": {
          "value": 1
        }
      },
      "xp:annoyed": {
        "minecraft:mark_variant": {
          "value": 2
        }
      },
      "xp:very_annoyed": {
        "minecraft:mark_variant": {
          "value": 3
        },
        "minecraft:collision_box": {
          "height": 0,
          "width": 0
        }
      },
      "xp:full_dead": {
        "minecraft:is_charged": {}
      },
      "xp:annoyable": {
        "minecraft:is_stunned": {}
      },
      "xp:neighbor_annoyed": {
        "minecraft:is_chested": {}
      },
      "xp:spawn_loot": {
        "minecraft:spawn_entity": {
          "entities": {
            "spawn_item": "xp:conduits_heart",
            "max_wait_time": 0,
            "min_wait_time": 0,
            "single_use": true
          }
        }
      },
      "xp:collision": {
        "minecraft:is_shaking": {}
      }
    },

    "components": {
      "minecraft:despawn": {
        "despawn_from_chance": true,
        "despawn_from_distance": {},
        "despawn_from_inactivity": true,
        "despawn_from_simulation_edge": true,
        "min_range_inactivity_timer": 30,
        "min_range_random_chance": 800,
        "remove_child_entities": false
      },
      "minecraft:type_family": {
        "family": ["conduit", "monster", "mob"]
      },
      "minecraft:collision_box": {
        "width": 2,
        "height": 3.2
      },
      "minecraft:health": {
        "value": 100,
        "max": 100
      },

      "minecraft:fire_immune": {},

      "minecraft:interact": {
        "interactions": [
          {
            "interact_text": "entity.xp:conduit.interact",
            "on_interact": {
              "event": "xp:stationed",
              "filters": {
                "test": "is_variant",
                "value": 0
              }
            }
          }
        ]
      },

      "minecraft:environment_sensor": {
        "triggers": [
          {
            "event": "xp:collision",
            "filters": {
              "all_of": [
                {
                  "test": "is_mark_variant",
                  "operator": "!=",
                  "value": 3
                },
                {
                  "test": "rider_count",
                  "operator": "!=",
                  "value": 3
                },
                {
                  "test": "bool_property",
                  "domain": "xp:collision",
                  "value": false
                }
              ]
            }
          }
        ]
      },

      "minecraft:jump.static": {},
      "minecraft:navigation.walk": {},
      "minecraft:movement.basic": {
        "max_turn": 8
      },
      "minecraft:movement": {
        "value": 0.1
      },
      "minecraft:behavior.random_stroll": {
        "interval": 300,
        "xz_dist": 4,
        "y_dist": 2,
        "priority": 10
      },
      "minecraft:behavior.avoid_block": {
        "tick_interval": 10,
        "search_range": 10,
        "search_height": 3,
        "target_selection_method": "nearest",
        "target_blocks": ["grass"],
        "walk_speed_modifier": 1.1,
        "priority": 0
      },
      "minecraft:behavior.tempt": {
        "priority": 8,
        "items": ["ender_eye"],
        "within_radius": 15,
        "speed_multiplier": 1.1
      },
      "minecraft:behavior.nearest_attackable_target": {
        "priority": 0,
        "must_reach": false,
        "must_see": false,
        "must_see_forget_duration": 3,
        "persist_time": 3,
        "reselect_targets": true,
        "scan_interval": 20,
        "set_persistent": true,
        "within_radius": 16,
        "entity_types": [
          {
            "filters": {
              "all_of": [
                {
                  "test": "has_biome_tag",
                  "operator": "!=",
                  "value": "the_end"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "operator": "!=",
                  "value": "player"
                },
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "mob"
                },
                {
                  "test": "is_family",
                  "operator": "!=",
                  "subject": "other",
                  "value": "conduit"
                }
              ]
            },
            "max_dist": 16,
            "must_see_forget_duration": 3
          }
        ]
      },
      "minecraft:behavior.melee_attack": {
        "priority": 1,
        "melee_fov": 90,
        "track_target": false,
        "random_stop_interval": 0,
        "reach_multiplier": 1,
        "attack_once": false,
        "require_complete_path": false,
        "cooldown_time": 0
      },
      "minecraft:attack": {
        "damage": 10
      },
      "minecraft:leashable": {
        "hard_distance": 6,
        "max_distance": 10,
        "soft_distance": 4
      },

      "minecraft:rideable": {
        "family_types": ["conduit_collision"],
        "seat_count": 3,
        "seats": [
          { "position": [0, 3.2, 0] },
          { "position": [1.25, 0.7, 0] },
          { "position": [-1.25, 0.7, 0] }
        ]
      },

      "minecraft:knockback_resistance": {
        "value": 1
      },
      "minecraft:physics": {},
      "minecraft:pushable": {
        "is_pushable": false,
        "is_pushable_by_piston": false
      },
      "minecraft:conditional_bandwidth_optimization": {
        "default_values": {
          "max_optimized_distance": 80.0,
          "max_dropped_ticks": 10,
          "use_motion_prediction_hints": true
        }
      },
      "minecraft:damage_sensor": {
        "triggers": [
          {
            "cause": "override",
            "on_damage": {
              "event": "xp:instant_despawn"
            },
            "deals_damage": false
          },
          {
            "cause": "void",
            "on_damage": {
              "event": "xp:instant_despawn"
            },
            "deals_damage": false
          },
          {
            "on_damage": {
              "filters": {
                "all_of": [
                  {
                    "test": "has_damage",
                    "value": "attack"
                  },
                  {
                    "test": "has_component",
                    "operator": "!=",
                    "value": "minecraft:is_stunned"
                  },
                  {
                    "test": "has_component",
                    "operator": "!=",
                    "value": "minecraft:is_baby"
                  }
                ]
              },
              "event": "xp:attacked"
            },
            "deals_damage": false
          },
          {
            "deals_damage": false
          }
        ]
      }
    },

    "events": {
      "xp:collision": {
        "add": {
          "component_groups": ["xp:collision"]
        },
        "set_property": {
          "xp:collision": false
        }
      },
      "xp:has_collision": {
        "remove": {
          "component_groups": ["xp:collision"]
        },
        "set_property": {
          "xp:collision": true
        }
      },
      "xp:instant_despawn": {
        "add": {
          "component_groups": ["xp:instant_despawn"]
        }
      },
      "xp:sanctuary_conduit": {
        "add": {
          "component_groups": ["xp:sanctuary_conduit"]
        }
      },

      "xp:teleport": {
        "add": {
          "component_groups": ["xp:teleport"]
        }
      },
      "xp:unteleport": {
        "remove": {
          "component_groups": ["xp:teleport"]
        }
      },

      "xp:use": {
        "add": {
          "component_groups": ["xp:use"]
        }
      },
      "xp:unuse": {
        "remove": {
          "component_groups": ["xp:use"]
        }
      },
      "xp:usable": {
        "add": {
          "component_groups": ["xp:usable", "xp:move"]
        }
        // "sequence": [
        //   {
        //     "add": {
        //       "component_groups": ["xp:usable"]
        //     }
        //   },
        //   {
        //     "filters": {
        //       "test": "has_component",
        //       "value": "minecraft:is_illager_captain"
        //     },
        //     "add": {
        //       "component_groups": ["xp:move"]
        //     }
        //   }
        // ]
      },
      "xp:stationed": {
        "add": {
          "component_groups": ["xp:stationed", "xp:no_move"]
        },
        "remove": {
          "component_groups": ["xp:move"]
        }
      },
      "xp:cooldown": {
        "add": {
          "component_groups": ["xp:cooldown"]
        },
        "remove": {
          "component_groups": ["xp:stationed"]
        }
      },

      "xp:attacked": {
        "sequence": [
          {
            "filters": { "test": "is_mark_variant", "value": 0 },
            "trigger": { "event": "xp:slightly_annoyed" }
          },
          {
            "filters": { "test": "is_mark_variant", "value": 1 },
            "trigger": { "event": "xp:annoyed" }
          },
          {
            "filters": {
              "all_of": [
                { "test": "is_mark_variant", "value": 2 },
                { "test": "has_tag", "value": "maxHitsTaken" }
              ]
            },
            "trigger": { "event": "xp:very_annoyed" }
          },
          { "trigger": { "event": "xp:start_annoy" } },
          {
            // "filters": { "test": "is_variant", "operator": "==", "value": 1 },
            "trigger": { "event": "xp:cooldown" }
          }
        ]
      },
      "xp:start_annoy": {
        "add": {
          "component_groups": ["xp:annoy", "xp:no_move"]
        },
        "remove": {
          "component_groups": ["xp:annoyable", "xp:move"]
        }
      },
      "xp:stop_annoy": {
        "sequence": [
          {
            "remove": {
              "component_groups": ["xp:annoy", "xp:neighbor_annoyed"]
            }
          },
          {
            "filters": {
              "all_of": [
                { "test": "is_variant", "value": 0 },
                { "test": "is_mark_variant", "operator": "!=", "value": 3 }
              ]
            },
            "add": {
              "component_groups": ["xp:move"]
            }
          }
        ]
      },
      "xp:slightly_annoyed": {
        "add": {
          "component_groups": ["xp:slightly_annoyed"]
        }
      },
      "xp:annoyed": {
        "add": {
          "component_groups": ["xp:annoyed"]
        }
      },
      "xp:very_annoyed": {
        "add": {
          "component_groups": ["xp:very_annoyed", "xp:no_move"]
        },
        "remove": {
          "component_groups": ["xp:move"]
        }
      },
      "xp:full_dead": {
        "add": {
          "component_groups": ["xp:full_dead", "xp:no_move"]
        },
        "remove": {
          "component_groups": ["xp:move"]
        }
      },
      "xp:enable_annoy": {
        "add": {
          "component_groups": ["xp:annoyable"]
        }
      },
      "xp:disable_annoy": {
        "remove": {
          "component_groups": ["xp:annoyable"]
        }
      },
      "xp:neighbor_annoyed": {
        "sequence": [
          { "add": { "component_groups": ["xp:neighbor_annoyed"] } },
          { "trigger": { "event": "xp:start_annoy" } },
          {
            // "filters": { "test": "is_variant", "operator": "==", "value": 1 },
            "trigger": { "event": "xp:cooldown" }
          }
        ]
      },
      "xp:spawn_loot": { "add": { "component_groups": ["xp:spawn_loot"] } },
      "xp:no_move": { "add": { "component_groups": ["xp:no_move"] } }
    }
  }
}

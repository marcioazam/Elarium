{
  "format_version": "1.13.0",
  "minecraft:feature_rules": {
    "description": {
      "identifier": "edx:snow_vase_features_rules",
      "places_feature": "edx:snow_vase_feature"
    },
    "conditions": {
      "placement_pass": "final_pass",
      "minecraft:biome_filter": [
        {
          "any_of": [
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "frozen"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "cold_taiga"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "ice_plains"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "ice_plains_spikes"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "deep_frozen_ocean"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "frozen_river"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "cold_beach"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "cold_taiga_hills"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "cold_taiga_mutated"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "ice_mountains"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "snowy_slopes"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "jagged_peaks"
            },
            {
              "test": "has_biome_tag",
              "operator": "==",
              "value": "frozen_peaks"
            }
            

          ]
        }
      ]
    },
    "distribution": {
      "iterations": 90,
      "coordinate_eval_order": "zyx",
      "x": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      },
      "y": {
        "distribution": "uniform",
        "extent": [ 0, 55 ]
      },
      "z": {
        "distribution": "uniform",
        "extent": [ 0, 16 ]
      }
    }
  }
}
